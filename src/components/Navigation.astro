---

---

<div
  id="nav-links"
  class="nav-links collapsed font-overpass-mono text-[21px] capitalize"
>
  <a class="fade-effect" href="/">Home</a>
  <a class="fade-effect" href="/muses">Muses</a>
  <a class="fade-effect" href="/short_form">Short Form</a>
  <a class="fade-effect" href="/long_form/tags">Long Form</a>
  <a class="fade-effect" href="/zeitweilig">Zeitweilig</a>
  <!-- <a href="/tags/">Tags</a> -->
  <slot />
</div>
<style>
  /* nav styles */
  .nav-links {
    position: absolute;
    width: 300px;
    height: auto;
    right: -100%;
    padding: 10px;
    transition: opacity 0.2s ease-in-out;
    opacity: 0;
    z-index: 10;
    pointer-events: none;
  }
  .nav-links.collapsed {
    right: 0;
    opacity: 0;
    top: 45px;
    border-radius: 10px;
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.25);
  }

  .nav-links.open {
    border-radius: 10px;
    right: 0;
    top: 45px;
    opacity: 1;
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.25);
    pointer-events: auto;
  }

  .nav-links a {
    display: block;
    line-height: 50px;
    padding-left: 30px;
    box-sizing: border-box;
    font-size: 22px;
    text-decoration: none;
    height: auto;
  }

  html.dark .nav-links {
    background: rgb(34, 33, 37);
  }

  html:not(.dark) .nav-links {
    background: rgb(245, 245, 245);
  }
  .fade-effect {
    transition: opacity 0.5s ease-in-out;
    opacity: 1;
  }

  .fade-effect:hover {
    opacity: 0.5;
  }
</style>
<!-- This worked because of how the CSS stacking context works.

The stacking context is a three-dimensional conceptualization of HTML elements along an imaginary z-axis relative to the user, who is facing the viewport or the webpage. Stacking context is controlled by CSS properties such as z-index, position, opacity, transform, and others.

When you set a z-index on an element, that z-index is only effective within its stacking context. This means it's only compared to other elements within the same stacking context. An element with a larger z-index will be rendered in front of an element with a smaller one.

In your case, the side modal was initially a child of the Header component. This means its z-index was only effective within the Header component. Even if it had a very high z-index, it would still appear behind elements outside the Header component if those elements had a stacking context of their own.

By moving the side modal to the root level of your document, you placed it in the topmost stacking context. This means its z-index is now compared to all other elements in the document, so it can appear on top of all other elements. -->