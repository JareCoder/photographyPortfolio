---
const { title, url, image, description, pubDate } = Astro.props;
const publishedDate = pubDate
  .toDateString()
  .split(" ")
  .slice(1)
  .join(" ");
---

<div class="flex flex-col sm:flex-row lg:space-x-14 lg:mb-14 sm:mb-14 gap-6 lg:justify-center" transition:animate="fade">
  {
    image && (
      <div id="image" class="flex w-full sm:w-1/3 relative lg:h-[480px] h-[360px]" >
        <img
          src={image}
          class="absolute inset-0 w-full h-full object-cover lg:object-top-33 sm:object-top-50"
          loading="lazy"
        />
      </div>
    )
  }
  <div id="description " class="w-full sm:w-2/3 flex flex-col justify-start align-self-center space-y-4" transition:animate="fade">
    <h2 class="font-josefin font-bold text-2xl capitalize" >{title}</h2>
    <p class="font-jost normal-case line-clamp-3 text-base">{description}</p>
    <p class="font-jost text-sm">Published on {publishedDate} </p>   
    <a
      href={url}
      class="prose prose-slate dark:prose-invert space-x-4 no-underline font-jost normal-case mt-8 max-w-max max-h-max flex flex-row items-center flex-shrink-0"
    >
      <p class="text-base fade-effect">See more</p>
      <svg 
        xmlns="http://www.w3.org/2000/svg"
        class="h-5 w-5 mb-[18px] fade-effect"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M14 5l7 7m0 0l-7 7m7-7H3"></path>
      </svg>
    </a>
    <slot />
  </div>
</div>
<style>
.fade-effect {
  transition: opacity 0.5s ease-in-out;
  opacity: 1;
}

.fade-effect:hover {
  opacity: 0.5;
}
</style>